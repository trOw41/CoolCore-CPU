<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>